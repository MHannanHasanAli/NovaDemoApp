﻿@model ImperialNova.ViewModels.InventoryInActionViewModel
@{
    ViewBag.Title = "Action";
}

<style>
    #_Date, #_Tracking {
        margin-top: 1px;
    }
    .product-box input {
        margin-inline: auto;
    }
    #autocomplete{
        font-size: 12px;
        width: 400px;
    }
    .dropdownimg{
        width: 30px;
        height: 30px;
    }
</style>
<div class="card">

    <div class="card-body">
        @if (Model._Id != 0)
        {
            <h2 class="card-title">
                Edit Inventory
            </h2>

        }
        else
        {
            <h2 class="card-title">
                Add Inventory
            </h2>

        }
        <br /><br />
              <form id="actionForm">
                  <div class="row">
                      <div class="col-md-3">
                          <div class="form-group">
                              <input type="hidden" value="@Model._Id" name="ID" />
                              <label for="_Date">Date:</label>
                              <input value="@Model._Date" type="date" class="form-control" name="_Date" id="_Date" placeholder="Enter cost" />
                          </div>
                      </div>
                      <div class="col-md-3">
                          <div class="form-group">
                              <label for="_ShippingCompany">Supplier:</label>
                              <select class="form-control" name="_ShippingCompany" id="_ShippingCompany">
                                  <option value="Fedex">Fedex</option>
                                  <option value="UPS">UPS</option>
                                  <option value="USPS">USPS</option>
                              </select>
                          </div>
                      </div>
                      <div class="col-md-3">
                          <label for="_Tracking">Tracking#:</label>
                          <input value="@Model._Tracking" type="number" class="form-control" name="_Tracking" id="_Tracking" />

                      </div>
                      <div class="col-md-3">
                          <div class="form-group">
                              <label for="_SupplierId">Supplier:</label>
                              <select class="form-control" name="_SupplierId" id="_SupplierId">
                                  @foreach (var item in Model.suppliers)
                                  {
                                      if (item._Id == Model._SupplierId)
                                      {
                                          <option selected value="@item._Id">@item._Name</option>
                                      }
                                      else
                                      {
                                          <option value="@item._Id">@item._Name</option>

                                      }
                                  }
                              </select>
                          </div>
                      </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                          <label for="name">Store:</label>
                          <select onchange="dropdownfiller()" class="form-control" name="_Store" id="_Store">
                              @foreach (var item in Model.locations)
                              {
                                  <option selected value="@item._Id">@item._LocationName</option>
                              }
                          </select>
                      </div>
                  </div>
                  <div class="col-md-6">
                      <div class="form-group">
                          <label for="_ProductId">Products:</label>
                          <select class="form-control" name="_ProductId" id="_ProductId">
                          </select>
                      </div>
                  </div>
                  <div class="row">
                      <div class="col-md-12 table-responsive">
                          <table class="table" id="ProductsTable">
                              <thead>
                                  <tr>
                                      <th>
                                          Photo
                                      </th>
                                      <th>
                                          SKU
                                      </th>
                                      <th>
                                          Title
                                      </th>
                                      <th>
                                          Expiry Date
                                      </th>

                                      @*@if (User.IsInRole("Admin"))
                            {
                                <th>
                                    Cost Price
                                </th>
                                <th>
                                    Retail Price
                                </th>
                            }*@
                                      <th>Location</th>
                                      <th>Quantity</th>
                                      <th>
                                          Price
                                      </th>
                                      <th>
                                          Amount
                                      </th>

                                      <th hidden>
                                          Category
                                      </th>

                                  </tr>
                              </thead>
                              <tbody>
                              </tbody>
                          </table>

                      </div>
                  </div>
              </form>

</div>

    <div class="errorDiv">

    </div>



    <div style="background-color:white;" class="card-footer">

        <button id="actionButton" type="button" class="btn btn-primary btn-sm btn-rounded"><i class="fas fa-save mr-1"></i> SAVE STOCK</button>
        <a href="@Url.Action("Index","InventoryIn")" class="btn btn-secondary btn-sm btn-rounded"  data-dismiss="modal"><i class="fas fa-times mr-1"></i> Close</a>
    </div>


</div>

<script type="text/javascript" src="scripts/jquery-1.8.2.min.js"></script>
<script type="text/javascript" src="scripts/jquery.mockjax.js"></script>
<script type="text/javascript" src="src/jquery.autocomplete.js"></script>

@*@if (User.IsInRole("Admin"))
{*@
    <script>
        $(document).ready(function () {
            $("#_Store").change(function () {
                var selectedStore = $(this).val();
                $.getJSON("/InventoryIn/GetItems", { store: selectedStore }, function (data) {
                    var itemDropdown = $("#_ProductId");
                    itemDropdown.empty();
                    $.each(data, function (i, item) {
                        var option = $("<option></option>").attr("value", item._Id);
                        var image = item._Photo; // Convert image to string
                        var text = item._Name + " | " + item._SKU + " | Qty: " + item._Quantity;

                        // Append the image and text to the option
                        option.append('<img class="dropdownimg" src="' + image + '"/>');
                        option.append(text);

                        // Append the option to the dropdown
                        itemDropdown.append(option);
                    });
                });
            });


        })
   //$(function () {
   //     $("#autocomplete").autocomplete({
   //         source: function (request, response) {
   //             $.ajax({
                    @*url: "@Url.Action("Autocomplete", "Country")",*@
    //                type: "GET",
    //                dataType: "json",
    //                data: { term: request.term },
    //                success: function (data) {
    //                    response(data);
    //                }
    //            });
    //        },
    //        minLength: 1, 
    //    });
    //});
            //function dropdownfiller() {
            //    var selectedLocation = $("#_Store").val();
            //$.ajax({
            //    type: "GET",
                @*url: '@Url.Action("GetProductInventoryInJson", "InventoryIn")',*@
        //        data: { location: selectedLocation },
        //        success: function (response) {
        //            populateProductsDropdown(response);
        //            console.log("Location updated on the server.");
        //        },
        //        error: function (xhr, status, error) {
        //            console.error("Error updating location: " + error);
        //        }
        //    });
        //}

    function populateProductsDropdown(products) {
        var productsDropdown = $("#_ProductId");
        productsDropdown.empty();

        // Add options to the dropdown based on the products data
        products.forEach(function (product) {
            var optionText = `${product._Name} | ${product._Size} | ${product._Color} | Cost: £${product._Cost} | Retail: £${product._RetailPrice} | Available Units: ${product._Quantity}`;

            productsDropdown.append($("<option>", { value: product._ProductId, text: optionText }));
        });
    }
    function appendProductToTable(product,quantityin,store,Notes) {
        var row = `
                <tr>
                    <td>${product._Id}</td>
                    <td>${product._SKU}</td>
                    <td>${product._Size}</td>
                    <td>${product._Color}</td>
                    <td>£${product._Cost}</td>
                    <td>£${product._RetailPrice}</td>
                    <td>${quantityin}</td>
                    <td>${product._QuantityOut}</td>
                    <td>${Notes}</td>
                    <td>${store}</td>
                    <td hidden>${product._CategoryId}</td>
                    <td></td>
                </tr>
            `;

        $('#ProductsTable tbody').append(row);
    }



    $("#AdddToTableBtn").click(function () {
        var ProductID = $("#_ProductId").val();
        var QuantityIn = $("#_QuantityIn").val();
        var Store = $("#_Store").val();
        var Notes = $('#_Notes').val();

        $.ajax({
            url: '@Url.Action("GetProductJson", "InventoryIn")',  // Replace with the actual URL of your controller
            method: 'GET',
            data: { ID: ProductID },
            success: function (data) {
                appendProductToTable(data, QuantityIn,Store,Notes);


            },
            error: function () {
                $('#productDetails').html('<p>Failed to fetch product details.</p>');
            }
        });


    });

    $("#actionButton").click(function () {
        var products = [];

        $('#ProductsTable tbody tr').each(function () {

            var product = {
                _ProductId: $(this).find('td:eq(0)').text(),
                _Name: $(this).find('td:eq(1)').text(),
                _Size: $(this).find('td:eq(2)').text(),
                _Color: $(this).find('td:eq(3)').text(),
                _Cost: $(this).find('td:eq(4)').text(),
                _RetailPrice: $(this).find('td:eq(5)').text(),
                _QuantityIn: $(this).find('td:eq(6)').text(),
                _QuantityOut: $(this).find('td:eq(7)').text(),
                _Notes: $(this).find('td:eq(8)').text(),
                _Store: $(this).find('td:eq(9)').text(),
                _CategoryId: $(this).find('td:eq(10)').text()
            };


            products.push(product);
        });
        var productsJson = JSON.stringify(products);


		$.ajax({
			url: '@Url.Action("Action", "InventoryIn")',
			type: "post",
            data: { products: productsJson }, // Send serialized string as parameter
        })
            .done(function (response) {
			if(response.success)
			{
				window.location.href = "@Url.Action("Index", "InventoryIn")";
			}
			else {
				$(".errorDiv").html(response.Message);
			}
		});
    });

    $("#PhotoUpload").change(function () {

        var element = this;
        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadPhotos", "Shared")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {

                console.log(response);
                if (response.Success) {
                    $("#Photo").val(response.DocURL);
                    $("#PhotoImg").attr("src", response.DocURL);

                }

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            })
    });
    </script>
    @*}*@
@*else
{
    <script>

    $(document).ready(function () {



    });
            function dropdownfiller() {
                var selectedLocation = $("#_Store").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetProductInventoryInJson", "InventoryIn")',
                data: { location: selectedLocation },
                success: function (response) {
                    populateProductsDropdown(response);
                    console.log("Location updated on the server.");
                },
                error: function (xhr, status, error) {
                    console.error("Error updating location: " + error);
                }
            });
        }

    function populateProductsDropdown(products) {

        var productsDropdown = $("#_ProductId");
        productsDropdown.empty();

        // Add options to the dropdown based on the products data
        products.forEach(function (product) {

            var optionText = `${product._Name} | ${product._Size} | ${product._Color} | Available Units: ${product._Quantity}`;

            productsDropdown.append($("<option>", { value: product._ProductId, text: optionText }));
        });
    }
    function appendProductToTable(product,quantityin,store,Notes) {
        var row = `
                <tr>
                    <td>${product._Id}</td>
                    <td>${product._Name}</td>
                    <td>${product._Size}</td>
                    <td>${product._Color}</td>
                    <td hidden>£${product._Cost}</td>
                    <td hidden>£${product._RetailPrice}</td>
                    <td>${quantityin}</td>
                    <td>${product._QuantityOut}</td>
                    <td>${Notes}</td>
                    <td>${store}</td>
                    <td hidden>${product._CategoryId}</td>
                    <td></td>
                </tr>
            `;

        $('#ProductsTable tbody').append(row);
    }



    $("#AdddToTableBtn").click(function () {
        var ProductID = $("#_ProductId").val();
        var QuantityIn = $("#_QuantityIn").val();
        var Store = $("#_Store").val();
        var Notes = $('#_Notes').val();
        $.ajax({
            url: '@Url.Action("GetProductJson", "InventoryIn")',  // Replace with the actual URL of your controller
            method: 'GET',
            data: { ID: ProductID },
            success: function (data) {
                appendProductToTable(data, QuantityIn,Store,Notes);


            },
            error: function () {
                $('#productDetails').html('<p>Failed to fetch product details.</p>');
            }
        });


    });

    $("#actionButton").click(function () {
        var products = [];

        $('#ProductsTable tbody tr').each(function () {

            var product = {
                _ProductId: $(this).find('td:eq(0)').text(),
                _Name: $(this).find('td:eq(1)').text(),
                _Size: $(this).find('td:eq(2)').text(),
                _Color: $(this).find('td:eq(3)').text(),
                _Cost: $(this).find('td:eq(4)').text(),
                _RetailPrice: $(this).find('td:eq(5)').text(),
                _QuantityIn: $(this).find('td:eq(6)').text(),
                _QuantityOut: $(this).find('td:eq(7)').text(),
                _Notes: $(this).find('td:eq(8)').text(),
                _Store: $(this).find('td:eq(9)').text(),
                _CategoryId: $(this).find('td:eq(10)').text()
            };


            products.push(product);
        });
        var productsJson = JSON.stringify(products);


		$.ajax({
			url: '@Url.Action("Action", "InventoryIn")',
			type: "post",
            data: { products: productsJson }, // Send serialized string as parameter
        })
            .done(function (response) {
			if(response.success)
			{
				window.location.href = "@Url.Action("Index", "InventoryIn")";
			}
			else {
				$(".errorDiv").html(response.Message);
			}
		});
    });

    $("#PhotoUpload").change(function () {

        var element = this;
        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadPhotos", "Shared")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {

                console.log(response);
                if (response.Success) {
                    $("#Photo").val(response.DocURL);
                    $("#PhotoImg").attr("src", response.DocURL);

                }

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            })
    });
    </script>
}*@