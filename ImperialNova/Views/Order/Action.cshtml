﻿@model ImperialNova.ViewModels.OrderActionViewModel
@{
    ViewBag.Title = "Action";
}
<head>
    <link href="~/Content/autocomplete/content/styles.css" rel="stylesheet" />

    <script type="text/javascript" src="~/Content/autocomplete/src/jquery.autocomplete.js"></script>

</head>
<style>
    .form-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-top: 50px;
    }
    .container-bottom {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .back{
        margin-right: 10px;
    }
    .col-md-8{
        display:flex;
        justify-content: space-between;
    }
    input{
        width: 400px;
    }
    .row{
        margin-left: -66px;
    }
    .radio-section {
        display: flex;
    }
    .radio-one {
        position: relative;
        top: -14px;
        left: -31px;
    }
    .radio-two {
        position: relative;
        left: -76px;
        top: -15px;
    }
    .setter{
        margin-left: -7px;
    }
    .yes {
        position: relative;
        left: -60px;
        top: 3px;
    }
    .no {
        position: relative;
        left: -102px;
        top: 3px;
    }
    .container {
        width: 100%;
        margin: 0 auto;
    }
    .setting {
        display: flex;
        gap: 5px;
    }

    #AdddToTableBtn {
        height: 34px;
        margin-top: 32px;
    }
    .row {

        width: 100%;
    }
    .quak{
        margin-left: 0px;
    }
    .QtyInput {
        width: 70px;
        height: 29px;
        margin-top: -2px;
        font-size: 15px;
    }
    table {
        margin-left: 65px;
    }
    #output {
        float: right;
        position: relative;
        left: -432px;
        background: #aca1a1;
        padding: 2px;
    }
    #totalAmount {
        float: right;
        position: relative;
        left: -44px;
        background: #aca1a1;
        padding: 2px;
    }
    .packedchkbox {
        width: 30px;
        margin-left: 19px;
        margin-top: 4px;
    }
</style>
@if (Model != null)
{
    <div class="card">
        <div class="card-body">
            @if (Model._Id != 0)
            {
                <h2 class="card-title">
                    Edit Order
                </h2>

            }
            else
            {
                <h2 class="card-title">
                    Add Order
                </h2>

            }
            <div class="container">
                <form id="actionForm">

                    <div class="form-container">
                        <div class="row quak">
                            <input value="@Model._Id" type="hidden" class="form-control" name="_Id" id="_Id" />

                            <div class="form-group col-md-3">
                                <label for="_Date">Date &nbsp;</label>
                                @if (Model._Id != 0)
                                {@Html.TextBox("_Date", Model._Date, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_Date", @class = "form-control", type = "date" })
                            }
                            else
                            {
                                @Html.TextBox("_Date", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_Date", @class = "form-control", type = "date" })
                                @*<input value="@Model._Date" type="date" class="form-control" name="_Date" id="_Date" placeholder="Enter cost" />*@
                            }
                                @*<input value="@Model._Date" type="date" class="form-control" name="_Date" id="_Date" placeholder="Enter name" />*@
                            </div>
                            <div class="form-group col-md-3">
                                <label for="_Record">Record# &nbsp;</label>
                                <input value="@Model._Record" type="text" class="form-control" name="_Record" id="_Record" />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="_ShipByDate">Ship By Date &nbsp;</label>
                                @if (Model._Id != 0)
                                {@Html.TextBox("_ShipByDate", Model._ShipByDate, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_ShipByDate", @class = "form-control", type = "date" })
                            }
                            else
                            {
                                @Html.TextBox("_ShipByDate", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_ShipByDate", @class = "form-control", type = "date" })
                                @*<input value="@Model._Date" type="date" class="form-control" name="_Date" id="_Date" placeholder="Enter cost" />*@
                            }
                                @*<input value="@Model._ShipByDate" type="date" class="form-control" name="_ShipByDate" id="_ShipByDate" />*@
                            </div>
                            <div class="form-group col-md-3">
                                <label for="_Tracking">Tracking &nbsp;</label>
                                <input value="@Model._Tracking" type="number" class="form-control" name="_Tracking" id="_Tracking" />
                            </div>
                        </div>
                        <div class="row setter">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="_Customer">Customer:</label>
                                    <select class="form-control" name="_Customer" id="_Customer">
                                        @if (!string.IsNullOrEmpty(Model._Customer))
                                        {
                                            <option selected value="@Model._Customer">@Model._Customer</option>
                                        }
                                        @foreach (var item in Model.customers)
                                        {
                                            if (item._Name != Model._Customer)
                                            {
                                                <option value="@item._Name">@item._Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <label>High Priority &nbsp;</label>
                                <div class="radio-section">
                                    <input type="radio" class="radio-one" id="_PriorityYes" name="_Priority" value="Yes" @(Model._Priority == "Yes" ? "checked" : "") />
                                    <label for="_PriorityYes" class="yes">Yes</label>
                                    <input type="radio" class="radio-two" id="_PriorityNo" name="_Priority" value="No" @(Model._Priority == "No" ? "checked" : "") />
                                    <label for="_PriorityNo" class="no">No</label>
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <label for="_IsPacked">Is Packed &nbsp;</label>
                                <select id="_IsPacked" name="_IsPacked" class="form-control">
                                    <option value="Yes" @(Model._IsPacked == "Yes" ? "selected" : "")>Yes</option>
                                    <option value="No" @(Model._IsPacked == "No" ? "selected" : "")>No</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    @if (Model._Id != 0)
                    {
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="_Status">Status:</label>
                                <select class="form-control" name="_Status" id="_Status">
                                    <option value="Ready To Ship">Ready To Ship</option>
                                    <option value="Shipped">Shipped</option>
                                </select>
                            </div>
                        </div>
                    }
                    else
                    {

                    }
                    @if (Model._Id != 0)
                    { }
                    else
                    {<div class="col-md-3">
                            <div class="form-group">
                                <label for="_StoreId">Store:</label>
                                <select class="form-control" name="_StoreId" id="_StoreId">
                                    @foreach (var item in Model.locations)
                                    {
                                        <option selected value="@item._Id">@item._LocationName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="setting">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="_ProductId">Products:</label>
                                    <select class="form-control" name="_ProductId" id="_ProductId">
                                    </select>
                                </div>
                            </div>
                            <button type="button" id="AdddToTableBtn" class="btn btn-sm btn-rounded btn-primary">ADD</button>
                        </div>}

                    @*<div class="product-box">
            <input type="text" name="country" id="autocomplete" class="autocomplete" placeholder="Search Product here" />
        </div>
        <div id="selection"></div>*@

                    <div class="row">
                        <div class="col-md-12 table-responsive">
                            <table class="table" id="ProductsTable">
                                <thead>
                                    <tr>
                                        <th>
                                            Id
                                        </th>

                                        <th>
                                            SKU
                                        </th>
                                        <th>
                                            Title
                                        </th>


                                        @*@if (User.IsInRole("Admin"))
                            {
                                <th>
                                    Cost Price
                                </th>
                                <th>
                                    Retail Price
                                </th>
                            }*@
                                        <th>Quantity Out</th>
                                        <th>
                                            Price
                                        </th>
                                        <th>
                                            Amount
                                        </th>

                                        <th hidden>
                                            Category
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model._Id != 0)
                                    {
                                        foreach (var item in Model.products)
                                        {
                                            <tr>
                                                <td>@item._Id</td>

                                                <td>@item._SKU</td>
                                                <td>@item._Title</td>
                                                <td>@item._Qty</td>
                                                <td>£@item._Price</td>
                                                <td>£@item._Amount</td>
                                                <td>@item._IsPacked</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                            <hr />
                            <h6 id="output">Total : @Model._Quantity</h6>
                            <h6 id="totalAmount">Total Amount: £@Model._Amount</h6>
                            <input name="_Quantity" id="_TotalQuantity" type="hidden" />
                            <input name="_Amount" id="_TotalAmount" type="hidden" />

                        </div>
                    </div>

                </form>



                
            </div>
            <div style="background-color:white;" class="card-footer container-bottom">
                <a href="@Url.Action("Index","Order")" class="btn btn-danger back"><i class="fas fa-times mr-1"></i> Cancel</a>
                @if (Model._Id != 0)
                {
                    <button id="actionButton" type="button" class="btn btn-success"><i class="fas fa-save mr-1"></i> Update</button>
                }
                else
                {
                    <button id="actionButton" type="button" class="btn btn-success"><i class="fas fa-save mr-1"></i> Save</button>
                }

            </div>

        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("input[name='_Priority']").change(function () {
            //var selectedValue = $("input[name='_Priority']:checked").val();

            //if (selectedValue === "Yes") {
            //    alert("High Priority is checked: Yes");
            //    // Do something when "Yes" is selected
            //} else if (selectedValue === "No") {
            //    alert("High Priority is checked: No");
            //    // Do something when "No" is selected
            //} else {
            //    alert("No option is selected");
            //    // Handle the case where neither "Yes" nor "No" is selected
            //}
        });
        $('.QtyInput').on('change', function () {
            updateTotalQuantity();

        });
        $(document).on('input', '.QtyInput', updateOutput);
        function updateOutput() {
            let sum = 0;
            let totalAmount = 0; // Initialize a variable to store the total amount
            const values = [];

            // Loop through all input fields with the class "QtyInput"
            $('.QtyInput').each(function () {
                const value = $(this).val();
                const priceWithDollarSign = $(this).closest('tr').find('.price').text();
                const price = parseFloat(priceWithDollarSign.replace('£', ''));

                values.push(value);
                const numericValue = parseFloat(value) || 0;
                sum += numericValue;
                const amount = numericValue * price;
                totalAmount += amount; // Add the amount to the totalAmount

                // Update the amount cell in the table.
                $(this).closest('tr').find('.amount').text('£' + amount.toFixed(2)); // Display the amount with 2 decimal places
            });

            // Set the content of the <h6> tag to display the total quantity
            $('#output').text(`Total Quantity Out: ${sum}`);
            $('#_TotalQuantity').val(sum);
            // Set the content of another <h6> tag to display the total amount
            $('#totalAmount').text(`Total Amount: £${totalAmount}`);
            $('#_TotalAmount').val(totalAmount);// Display the totalAmount with 2 decimal places
// Display the totalAmount with 2 decimal places
        }

        $("#_StoreId").change(function () {
            var selectedStore = $(this).val();
            $.getJSON("/Order/GetItems", { store: selectedStore }, function (data) {
                var itemDropdown = $("#_ProductId");
                itemDropdown.empty();
                $.each(data, function (i, item) {
                    var option = $("<option></option>").attr("value", item._Id);
                    var image = item._Photo; // Convert image to string
                    var text = item._Name + " | " + item._SKU + " | Qty: " + item._Quantity;

                    // Append the image and text to the option
                    option.append('<img class="dropdownimg" src="' + image + '"/>');
                    option.append(text);

                    // Append the option to the dropdown
                    itemDropdown.append(option);
                });
            });
        });
    });
   $("#AdddToTableBtn").click(function () {
            var ProductID = $("#_ProductId").val();


        $.ajax({
            url: '@Url.Action("GetProductJson", "Order")',  // Replace with the actual URL of your controller
            method: 'GET',
            data: { ID: ProductID },
            success: function (data) {
                //, QuantityIn, Store, Notes
                appendProductToTable(data);


            },
            error: function () {
                $('#productDetails').html('<p>Failed to fetch product details.</p>');
            }
        });


        });
    //, quantityin, store, Notes
            function appendProductToTable(product) {
                var row = `
               <tr>
  <td>${product._Id}</td>
  <td>${product._SKU}</td>
  <td>${product._Name}</td>
  <td class="qtyinput"><input class="QtyInput" type="number" id="_Quantity"/></td>
  <td class="price">£${product._Cost}</td>
  <td class="amount"></td>
</tr>
            `;

                $('#ProductsTable tbody').append(row);
            }
    
        var totalQuantity = 0;

        // Function to update the total quantity and display it in the <h6> tag
        function updateTotalQuantity() {
            totalQuantity = 0; // Reset total quantity
            // Loop through all input fields with class "QtyInput"
            $('.QtyInput').each(function () {
                var quantity = parseInt($(this).val()) || 0; // Parse quantity as an integer, default to 0
                totalQuantity += quantity; // Add the quantity to the total
            });
            // Display the total quantity in the element with ID "totalQuantity"
            $('#totalQuantity').text('Total Quantity: ' + totalQuantity);
        }
    $("#actionButton").click(function () {
        $("#actionButton").attr("disabled", "disabled");
        showLoadingSpinner();
        var products = [];
        $('#ProductsTable tbody tr').each(function () {

            var product = {
                _ProductId: $(this).find('td:eq(0)').text(),
                _SKU: $(this).find('td:eq(1)').text(),
                _Name: $(this).find('td:eq(2)').text(),
                _Quantity: $(this).find('td:eq(3) input').val(),
                _Price: $(this).find('td:eq(4)').text().replace('£', ''),
                _Amount: $(this).find('td:eq(5)').text().replace('£', ''),
            };
            console.log(product);
            products.push(product);
        });
        var productsJson = JSON.stringify(products);

            console.log(productsJson);
        var sender = $("#actionForm").serialize();
        console.log(sender);
            $.ajax({
			url: '@Url.Action("Action", "Order")',
			type: "post",
			data: $("#actionForm").serialize()
		})
            .done(function (response) {
			if(response.success)
            {
                $.ajax({
			url: '@Url.Action("ActionProducts", "Order")',
			type: "post",
            data: { products: productsJson}, // Send serialized string as parameter
        })
            .done(function (response) {
			if(response.success)
			{
                				window.location.href = "@Url.Action("Index", "Order")";

			}
			else {
				$(".errorDiv").html(response.Message);
			}
		});

			}
			else {
				$(".errorDiv").html(response.Message);
			}
            });


        })


    $("#FileUpload").change(function () {
        var element = this;
        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("File", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadPhotos", "Shared")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {

                console.log(response);
                if (response.Success) {
                    $("#_File").val(response.DocURL);
                    $("#FileImg").attr("src", response.DocURL);

                }

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            })
    });
</script>