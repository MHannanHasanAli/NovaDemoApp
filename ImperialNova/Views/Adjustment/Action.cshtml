﻿@model ImperialNova.ViewModels.AdjustmentActionViewModel
@{
    ViewBag.Title = "Action";
}
<head>
    <link href="~/Content/autocomplete/content/styles.css" rel="stylesheet" />

    <script type="text/javascript" src="~/Content/autocomplete/src/jquery.autocomplete.js"></script>

</head>
<style>
    #_Date, #_Tracking {
        margin-top: 1px;
    }

    .product-box input {
        margin-inline: auto;
    }

    #autocomplete {
        font-size: 12px;
        width: 400px;
    }
    #_Remarks {
        margin-top: 1px;
    }
    .QtyInput {
        width: 70px;
        height: 29px;
        margin-top: -2px;
        font-size: 15px;
    }
    #output {
        float: right;
        position: relative;
        left: -147px;
        background: #aca1a1;
        padding: 2px;
    }
    .setting{
        display: flex;
        gap: 5px;
    }
    #AdddToTableBtn {
        height: 34px;
        margin-top: 32px;
    }
</style>
<div class="card">

    <div class="card-body">
        @if (Model._Id != 0)
        {
            <h2 class="card-title">
                Edit Inventory Adjustment
            </h2>

        }
        else
        {
            <h2 class="card-title">
                Add Inventory Adjustment
            </h2>

        }
        <br /><br />
              <form id="actionForm">
                  <div class="row">
                      <div class="col-md-3">
                          <div class="form-group">
                              <input type="hidden" value="@Model._Id" name="_Id" />
                              <label for="_Date">Date:</label>
                              @if (Model._Id != 0)
                              {@Html.TextBox("_Date", Model._Date, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_Date", @class = "form-control", type = "date" })
                          }
                          else
                          {
                              @Html.TextBox("_Date", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "_Date", @class = "form-control", type = "date" })
                              @*<input value="@Model._Date" type="date" class="form-control" name="_Date" id="_Date" placeholder="Enter cost" />*@
                          }
                          </div>
                      </div>

                      <div class="col-md-9">
                          <label for="_Remarks">Remarks:</label>
                          <input value="@Model._Remarks" type="text" class="form-control" name="_Remarks" id="_Remarks" />

                      </div>

                  </div>
                  @if (Model._Id != 0)
                  {
                      

                  }
                  else
                  {
                      <div class="col-md-3">
                          <div class="form-group">
                              <label for="_StoreId">Store:</label>
                              <select class="form-control" name="_StoreId" id="_StoreId">
                                  @foreach (var item in Model.Locations)
                                  {
                                      <option selected value="@item._Id">@item._LocationName</option>
                                  }
                              </select>
                          </div>
                      </div>
                      <div class="setting">
                          <div class="col-md-6">
                              <div class="form-group">
                                  <label for="_ProductId">Products:</label>
                                  <select class="form-control" name="_ProductId" id="_ProductId">
                                  </select>
                              </div>
                          </div>
                          <button type="button" id="AdddToTableBtn" class="btn btn-sm btn-rounded btn-primary">ADD</button>
                      </div>

                  }

                  @*<div class="product-box">
            <input type="text" name="product" autocomplete="off" id="autocomplete" class="autocomplete" placeholder="Search Product here" />
        </div>
        <div id="selection"></div>*@

                  <div class="row">
                      <div class="col-md-12 table-responsive">
                          <table class="table" id="ProductsTable">
                              <thead>
                                  <tr>
                                      <th>
                                          Id
                                      </th>

                                      <th>
                                          SKU
                                      </th>
                                      <th>
                                          Title
                                      </th>
                                      <th>
                                          Qty
                                      </th>

                                      @*@if (User.IsInRole("Admin"))
                            {
                                <th>
                                    Cost Price
                                </th>
                                <th>
                                    Retail Price
                                </th>
                            }*@


                                  </tr>
                              </thead>
                              <tbody>
                                  @foreach (var item in Model.products)
                                  {
                                      <tr>
                                          <td>@item._Id</td>
                                          <td>@item._SKU</td>
                                          <td>@item._Title</td>
                                          <td>@item._Qty</td>
                                      </tr>
                                  }
                              </tbody>

                          </table>
                          <hr />
                          <h6 id="output">Total Quantity: @Model._Quantity</h6>
                      </div>
                  </div>
              </form>

    </div>

    <div class="errorDiv">

    </div>



    <div style="background-color:white;" class="card-footer">

        <button id="actionButton" type="button" class="btn btn-primary btn-sm btn-rounded"><i class="fas fa-save mr-1"></i> SAVE STOCK</button>
        <a href="@Url.Action("Index","Adjustment")" class="btn btn-secondary btn-sm btn-rounded" data-dismiss="modal"><i class="fas fa-times mr-1"></i> Close</a>
    </div>


</div>

<script type="text/javascript" src="~/Content/autocomplete/src/jquery.autocomplete.js"></script>

@*@if (User.IsInRole("Admin"))
{*@
<script>
    $(document).ready(function () {
        $('.QtyInput').on('change', function () {
            updateTotalQuantity(); // Update the total quantity when an input changes
        });
        $(document).on('input', '.QtyInput', updateOutput);
        function updateOutput() {
            let sum = 0;
            const values = [];

            // Loop through all input fields with the class "input-field"
            $('.QtyInput').each(function () {
                const value = $(this).val();
                values.push(value);

                const numericValue = parseFloat(value) || 0;
                sum += numericValue;
            });

            // Set the content of the <h1> tag to display both the concatenated values and their sum
            $('#output').text(`Total : ${sum}`);
        }
            $("#_StoreId").change(function () {
                var selectedStore = $(this).val();
                $.getJSON("/InventoryIn/GetItems", { store: selectedStore }, function (data) {
                    var itemDropdown = $("#_ProductId");
                    itemDropdown.empty();
                    $.each(data, function (i, item) {
                        var option = $("<option></option>").attr("value", item._Id);
                        var image = item._Photo; // Convert image to string
                        var text = item._Name + " | " + item._SKU + " | Qty: " + item._Quantity;

                        // Append the image and text to the option
                        option.append('<img class="dropdownimg" src="' + image + '"/>');
                        option.append(text);

                        // Append the option to the dropdown
                        itemDropdown.append(option);
                    });
                });
            });
       

        $("#AdddToTableBtn").click(function () {
            var ProductID = $("#_ProductId").val();


        $.ajax({
            url: '@Url.Action("GetProductJson", "Adjustment")',  // Replace with the actual URL of your controller
            method: 'GET',
            data: { ID: ProductID },
            success: function (data) {
                //, QuantityIn, Store, Notes
                appendProductToTable(data);


            },
            error: function () {
                $('#productDetails').html('<p>Failed to fetch product details.</p>');
            }
        });


        });
    //, quantityin, store, Notes
            function appendProductToTable(product) {
                var row = `
                <tr>
                    <td>${product._Id}</td>                                   
                    <td>${product._SKU}</td>
                    <td>${product._Name}</td>
                    <td><input class="QtyInput" type="number" id="_Quantity"/></td>
                </tr>
            `;

                $('#ProductsTable tbody').append(row);
            }
    })
        var totalQuantity = 0;

        // Function to update the total quantity and display it in the <h6> tag
        function updateTotalQuantity() {
            totalQuantity = 0; // Reset total quantity
            // Loop through all input fields with class "QtyInput"
            $('.QtyInput').each(function () {
                var quantity = parseInt($(this).val()) || 0; // Parse quantity as an integer, default to 0
                totalQuantity += quantity; // Add the quantity to the total
            });
            // Display the total quantity in the element with ID "totalQuantity"
            $('#totalQuantity').text('Total Quantity: ' + totalQuantity);
        }
    $("#actionButton").click(function () {

        $("#actionButton").attr("disabled", "disabled");
        showLoadingSpinner();
        var products = [];

        $('#ProductsTable tbody tr').each(function () {

            var product = {
                _ProductId: $(this).find('td:eq(0)').text(),
                _SKU: $(this).find('td:eq(1)').text(),
                _Name: $(this).find('td:eq(2)').text(),
                _Quantity: $('#_Quantity').val(),

            };


            products.push(product);
        });
        var productsJson = JSON.stringify(products);

            console.log(productsJson);
            var sender = $("#actionForm").serialize();

            $.ajax({
			url: '@Url.Action("ActionProducts", "Adjustment")',
			type: "post",
            data: { products: productsJson}, // Send serialized string as parameter
        })
            .done(function (response) {
			if(response.success)
			{
                 $.ajax({
			url: '@Url.Action("Action", "Adjustment")',
			type: "post",
			data: $("#actionForm").serialize()
		})
            .done(function (response) {
			if(response.success)
			{
				window.location.href = "@Url.Action("Index", "Adjustment")";

			}
			else {
				$(".errorDiv").html(response.Message);
			}
            });
			}
			else {
				$(".errorDiv").html(response.Message);
			}
		});

    });
   @*$(function () {
       $("#autocomplete").autocomplete({
           alert("Autocomplete Activated");
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("GetProductInJson", "Order")",
                    type: "GET",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1, // Minimum characters to trigger autocomplete
        });
    });
            function dropdownfiller() {
                var selectedLocation = $("#_Store").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetProductAdjustmentJson", "Adjustment")',
                data: { location: selectedLocation },
                success: function (response) {
                    populateProductsDropdown(response);
                    console.log("Location updated on the server.");
                },
                error: function (xhr, status, error) {
                    console.error("Error updating location: " + error);
                }
            });
        }*@


    $("#PhotoUpload").change(function () {

        var element = this;
        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadPhotos", "Shared")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {

                console.log(response);
                if (response.Success) {
                    $("#Photo").val(response.DocURL);
                    $("#PhotoImg").attr("src", response.DocURL);

                }

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            })
    });
        @*function initializeAutocompleteForCustomers() {
        $.ajax({
            url: '@Url.Action("GetProductInJson", "Order")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var lookup = [];

                // Iterate through the ServiceModel items
                data.forEach(function (product) {
                    lookup.push({
                        value: product._Id,
                        ProductPhoto: product._Photo,
                        ProductName: product._Name,
                        ProductSKU: product._SKU,
                        //CustomerEmail: customer.Email,
                        //CustomerMobileNumber: customer.MobileNumber,
                        //data: {
                        //    id: customer.ID // Add the service.ID to data
                        //}
                    });

                });

                $('.autocomplete').devbridgeAutocomplete({
                    lookup: lookup,
                    minChars: 1,
                    formatResult: function (suggestion, currentValue) {
                        // Customize the rendering of each suggestion

                        return '<table class="table table-hovered">' +
                            '<tbody>' +
                            '<tr>' +
                            '<td class="suggestion-initial">' +
                            '<div class="circular-box">' + suggestion.CustomerInitials + '</div>' +
                            '</td>' +
                            '<td class="suggestion-details">' +
                            '<div class="customer-name">' + suggestion.CustomerName + '</div>' +
                            '<div class="customer-email">' + suggestion.CustomerEmail + '</div>' +
                            '<div class="customer-mobile">' + suggestion.CustomerMobileNumber + '</div>' +
                            '</td>' +
                            '</tr>' +
                            '</tbody>' +
                            '</table>';
                    },
                    onSelect: function (suggestion) {
                        var selectedCustomerID = suggestion.data.id;
                        console.log(selectedCustomerID);
                        var $inputElement = $(this);

                        $.ajax({
                            url: '@Url.Action("GetCustomerDetails", "Appointment")', // Replace with your controller action URL
                            type: 'GET',
                            dataType: 'json',
                            data: { ID: selectedCustomerID }, // Pass the selectedServiceId as a parameter
                            success: function (customer) {
                                console.log("customer Details" + customer);
                                $("#MainCustomerSelectedContainer").empty();
                                var DivToBeAdded = '<div class="suggestion-container">' +
                                    '<button  style="float:right;" onclick="ClearTheCustomer()" type="button" class="close-button" aria-label="Close">' +
                                    '<span aria-hidden="true">&times;</span>' +
                                    '</button>' +
                                    '<table class="table table-hovered">' +
                                    '<tbody>' +
                                    '<tr>' +
                                    '<td class="suggestion-initial">' +
                                    '<div class="circular-box">' + customer.FirstName.charAt(0) + customer.LastName.charAt(0) + '</div>' +
                                    '</td>' +
                                    '<td class="suggestion-details">' +
                                    '<input type="hidden" name="CustomerID" id="CustomerID" value='+customer.ID+' class="customer-id">'+
                                    '<div class="customer-name">' + customer.FirstName + " " + customer.LastName + '</div>' +
                                    '<div class="customer-email">' + customer.Email + '</div>' +
                                    '<div class="customer-mobile">' + customer.MobileNumber + '</div>' +
                                    '</td>' +
                                    '</tr>' +
                                    '</tbody>' +
                                    '</table>' +
                                    '</div>';

                                $("#MainCustomerSelectedContainer").append(DivToBeAdded);


                            },
                            error: function (error) {
                                console.error('Error fetching service details:', error);
                            }
                        });
                        // Now you can access the selected service ID (selectedServiceId)
                        // and use it as needed.
                    },
                    showNoSuggestionNotice: true,
                    noSuggestionNotice: 'Sorry, no matching results'
                });
            },
            error: function (error) {
                console.error('Error fetching data:', error);
            }
        });
    }*@

</script>
