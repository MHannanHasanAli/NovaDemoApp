@model ImperialNova.ViewModels.TodoListListingViewModel

@{
}
<style>
    .addbtn {
        border-radius: 50%;
        padding: 10px;
        background: black;
        color: white;
        border: 1px solid black;
    }

    .container-top {
        display: flex;
    }

    .fa-download {
        color: blue; /* Set the default color to blue */
        transition: color 0.3s; /* Add a smooth color transition */
    }

        .fa-download:hover {
            color: black; /* Change the color to black on hover */
        }
        .del{
            color: red;
        }
.Task{
    display: flex;
    justify-content: space-between;
}
    .fa-file, .fa-edit {
        color: blue;
    }
    .topdiv{
        display: flex;
    }
    .task-checkbox {
        margin-top: 1px;
        margin-right: 6px;
    }
    .btn {
        margin-top: -7px;
    }
    .bottomdiv {
        position: absolute;
        left: 1025px;
    }
    .tab-attr {
        float: left;
    }
    .mover-date {
        padding-top: -1px;
    }
    .chkbox{
            padding-top: 2px;
    }
  .mover-description{
      /*text-decoration: line-through;*/
        margin-bottom: 1px;
    }
    .mover-file {
        margin-top: -21px;
        padding-top: 17px;
        height: 34px;
    }
    .completed {
        text-decoration: line-through;
    }

</style>
<div class="container">
    <div class="card">
        <div class="card-body  container-top">
            <div>
                <h2>TodoList </h2>
            </div>
            <div>
                <form>

                    <div class="input-group">

                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <a href="@Url.Action("Action", "TodoList")" class=" addbtn btn btn-outline-success"><i class="fas fa-plus mr-1"></i></a>

                    </div>
                </form>
            </div>
        </div>
        @*<div class="bottomdiv">
            <a class="edit" href="@Url.Action("Action", "TodoList", new { ID = item._Id })">
                <i class="fas fa-edit"></i>
            </a>
            <a class="data-btn del" data-href="@Url.Action("Delete", "TodoList", new { ID = item._Id })" data-toggle="modal" data-target="#actionModal">
                <i class="fa fa-trash" aria-hidden="true"></i>
            </a>
        </div>
        <div class="Task">
            <div class="topdiv">
                <input type="checkbox" class="task-checkbox" id="checkbox-@item._Id" @(item._Ticked ? "True" : "")>
                <label for="checkbox-@item._Id">@item._DueDate.Date.ToString("yyyy-MM-dd") - @item._Description</label>
                <a class="btn" href="@Url.Action("DownloadFile", "Shared", new { path = item._File })">
                    <i class="fa fa-file" aria-hidden="true"></i>
                </a>
            </div>

        </div>*@
        @if (Model.todolists != null)
        {
            <section class="content">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">

                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title"></h3>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body">
                                    <form id="myForm">
                                        @Html.AntiForgeryToken()

                                        <table>
                                            <thead>
                                                
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.todolists)
                                                {


                                                    <tr>
                                                        <td class="chkbox">
                                                            @Html.CheckBoxFor(model => @item._Ticked)
                                                            <input type="hidden" name="_Id" id="_Id" value="@item._Id" />
                                                        </td>
                                                        <td class="tab-attr mover-date @((item._Ticked) ? "completed" : "")">@item._DueDate.ToString("yyyy-MM-dd") -</td>
                                                        <td class="tab-attr mover-description @((item._Ticked) ? "completed" : "")">
                                                            <div class="Task">
                                                                <div class="topdiv" style="display: flex; align-items: center;">
                                                                    @Html.DisplayFor(model => item._Description)
                                                                    <a class="btn mover-file" href="@Url.Action("DownloadFile", "Shared", new { path = item._File })">
                                                                        <i class="fa fa-file" aria-hidden="true"></i>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td style="float:right;">
                                                            <div class="bottomdiv">
                                                                <a class="edit" href="@Url.Action("Action", "TodoList", new { ID = item._Id })">
                                                                    <i class="fas fa-edit"></i>
                                                                </a>
                                                                <a class="data-btn del" data-href="@Url.Action("Delete", "TodoList", new { ID = item._Id })" data-toggle="modal" data-target="#actionModal">
                                                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                


                                                }
                                            </tbody>
                                        </table>

                                        <input type="submit" value="Submit" style="display: none;" />
                                    </form>
                                </div>
                                <!-- /.card-body -->
                            </div>
                            <!-- /.card -->
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                </div>
                <!-- /.container-fluid -->
            </section>
        }
        else
        {

            <div class="alert alert-warning col-md-12" role="alert">
                Sorry! No records exist.
            </div>
        }
    </div>
</div>

<div class="modal fade" id="actionModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
    </div>
</div>

<script>
    //$(document).ready(function () {

    //});
    $(document).ready(function () {
        const form = $("#myForm");

            // Function to send the AJAX request
            function sendAjaxRequest(id, checkboxState) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UpdateData", "TodoList")",
                    data: { id: id, checkboxState: checkboxState },
                    success: function (response) {
                        //alert(response);
                        if (response.Success) {
                        //    alert(response.Message);
                        } else {
                        //    alert("Error: " + response.Message);
                        }
                    },
                    error: function (err) {
                        alert(err);
                    //    alert("An error occurred.");
                    }
                });
            }
      
        $("input[type=checkbox]").change(function () {
            var isChecked = $(this).prop("checked");
            var id = $('#_Id').val();
                $(this).closest("tr").find(".tab-attr.mover-date, .tab-attr.mover-description").toggleClass("completed", isChecked);
            sendAjaxRequest(id, isChecked);
            });
        
        $("#example1").DataTable({

            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["csv", "colvis"]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

    });
    $(".data-btn").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
        })
            .done(function (response) {
                $("#actionModal .modal-dialog").html(response);
            });
    });
</script>